import * as path from 'path';
import * as fs from 'fs';
import * as console from 'console';
import {indexen} from './indexen';
import {createCLIArgumentsParser} from './createCLIArgumentsParser';
import {serializeDefinitionMap} from './serializeDefinitionMap';
import {getVersion} from './getVersion';

export const indexenCLI = async (
    props: {
        input: string,
        output: string,
    },
): Promise<void> => {
    const params = {
        directory: path.resolve(props.input),
        output: path.resolve(props.output),
        include: (file: string) => !(/index\.[jt]s/).test(file),
    };
    const output = fs.createWriteStream(params.output);
    output.write('// Generated by @nlib/nodetool indexen\n');
    for await (const line of indexen(params)) {
        output.write(line);
    }
    output.close();
};

if (!module.parent) {
    const parse = createCLIArgumentsParser({
        input: {
            type: 'string',
            alias: 'i',
            description: 'A directory indexen reads from',
        },
        output: {
            type: 'string',
            alias: 'o',
            description: 'A file path indexen writes to',
        },
        help: {
            type: 'boolean',
            alias: 'h',
            description: 'Show help',
        },
        version: {
            type: 'boolean',
            alias: 'v',
            description: 'Output the version number',
        },
    });
    const args = process.argv.slice(2);
    if (args.includes('--help') || args.includes('-h')) {
        for (const help of serializeDefinitionMap(parse.definition)) {
            process.stdout.write(help);
        }
    } else if (args.includes('--version') || args.includes('-v')) {
        console.log(getVersion(path.join(__dirname, '../package.json')));
    } else {
        indexenCLI(parse(process.argv.slice(2)))
        .catch((error) => {
            console.error(error);
            process.exit(1);
        });
    }
}
